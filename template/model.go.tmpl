package {{.modelPackageName}}

import (
    "database/sql"
    "time"

    "github.com/satori/go.uuid"
    "github.com/guregu/null"
)

var (
    _ = time.Second
    _ = sql.LevelDefault
    _ = null.Bool{}
    _ = uuid.UUID{}
)

/*
DB Table Details
-------------------------------------
{{ $ddl := .TableInfo.DBMeta.DDL }}
{{if $ddl }}
{{$ddl}}
{{- end}}

JSON Sample
-------------------------------------
{{ToJSON .TableInfo.Instance 4}}

{{if .TableInfo.Notes }}
Comments
-------------------------------------
{{ .TableInfo.Notes}}
{{end}}

*/



// {{.StructName}} struct is a row record of the {{.TableName}} table in the {{.DatabaseName}} database
type {{.StructName}} struct {
    {{range .TableInfo.Fields}}{{.}}
    {{end}}
}

// TableName sets the insert table name for this struct type
func ({{.ShortStructName}} *{{.StructName}}) TableName() string {
	return "{{.TableName}}"
}



// BeforeSave invoked before saving, return an error if field is not populated.
func ({{.ShortStructName}} *{{.StructName}}) BeforeSave() error {
	return nil
}

// Prepare invoked before saving, can be used to populate fields etc.
func ({{.ShortStructName}} *{{.StructName}}) Prepare() {
}

// Validate invoked before performing action, return an error if field is not populated.
func ({{.ShortStructName}} *{{.StructName}}) Validate(action Action) error {
    return nil
}
